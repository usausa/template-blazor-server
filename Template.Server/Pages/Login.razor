@page "/login"
@layout SimpleLayout
@inject NavigationManager NavigationManager
@inject CookieAuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Login</PageTitle>

<EditForm Model="@form" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <CustomValidator @ref="customValidator" />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Username</label>
        <InputText @bind-Value="form.Username" class="form-control"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Password</label>
        <InputText @bind-Value="form.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    public class LoginForm
    {
        [Required]
        public string Username { get; set; } = default!;

        [Required]
        public string Password { get; set; } = default!;
    }

    private readonly LoginForm form = new();

    private CustomValidator customValidator = default!;

    [Parameter]
    public bool Reload { get; set; }

    private async Task Submit()
    {
        customValidator.ClearErrors();

        if (await AuthenticationStateProvider.LoginAsync(form.Username, form.Password))
        {
            if (!Reload)
            {
                NavigationManager.NavigateTo("/");
            }
        }
        else
        {
            var errors = new Dictionary<string, List<string>>
            {
                { nameof(form.Username), new() { "Login failed." } }
            };
            customValidator.DisplayErrors(errors);
        }
    }
}
